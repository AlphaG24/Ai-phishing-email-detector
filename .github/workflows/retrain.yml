name: Retrain Model

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # daily at 00:00 UTC

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r phishing_detector/requirements.txt

      - name: Clean __pycache__ and .pyc files
        run: |
          find . -name "*.pyc" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} +

      - name: Debug - show retrain_model.py (confirm correct file)
        run: |
          echo "=== retrain_model.py content ==="
          sed -n '1,200p' phishing_detector/src/retrain_model.py || true
          echo "=== end file ==="

      # Run retraining only if feedback_data.csv exists.
      # Step sets outputs 'retrained' and 'skipped' via GITHUB_OUTPUT.
      - name: Run retraining
        id: retrain
        run: |
          if [ -f feedback_data.csv ]; then
            echo "üìå feedback_data.csv found ‚Äî running retrain_model.py"
            # run retrain; exit code 0 indicates success
            if python phishing_detector/src/retrain_model.py; then
              echo "retrained=true" >> $GITHUB_OUTPUT
              echo "skipped=false" >> $GITHUB_OUTPUT
            else
              echo "retrained=false" >> $GITHUB_OUTPUT
              echo "skipped=false" >> $GITHUB_OUTPUT
              # non-zero exit will mark job step failed; we still propagate outputs
              exit 1
            fi
          else
            echo "‚ö†Ô∏è feedback_data.csv NOT found ‚Äî skipping retrain"
            echo "retrained=false" >> $GITHUB_OUTPUT
            echo "skipped=true" >> $GITHUB_OUTPUT
          fi

      # Debug: list the model files (if any) so logs show what exists on runner
      - name: Debug - list model files
        if: always()
        run: |
          echo "Listing phishing_detector/models/final/"
          ls -la phishing_detector/models/final/ || echo "No models folder present"

      # Commit and push updated model only when retraining succeeded AND model files exist.
      - name: Commit retrained model
        if: steps.retrain.outputs.retrained == 'true' && hashFiles('phishing_detector/models/final/naive_bayes_model.joblib') != ''
        run: |
          echo "üß† Retrain reported success and model file exists ‚Äî committing models"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add phishing_detector/models/final/naive_bayes_model.joblib phishing_detector/models/final/tfidf_vectorizer_advanced.joblib || echo "‚ö†Ô∏è No model files to add"
          git commit -m "ü§ñ Auto-update: retrained model" || echo "‚ö†Ô∏è Nothing to commit"
          # Push via token from secret
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/AlphaG24/Ai-phishing-email-detector.git main || echo "‚ö†Ô∏è Push failed or nothing to push"
